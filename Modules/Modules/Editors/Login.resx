<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VY1PqhCEJSVjVCEIWCkJPqhCEJST6rBKEIQv/9k=
</value>
  </data>
</root>